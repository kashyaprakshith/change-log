name: Technical Changelog

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  check_tags:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      # Setup Python    
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install git python
        run: |
          pip3 install -q GitPython==3.1.40    

      - name: Get latest tag
        id: latest-tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0) 
          echo "LATEST_TAG=${LATEST_TAG}" >> "$GITHUB_ENV"
          
      - name: Get previous tag
        id: previous-tag
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 -n 1)) 
          echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> "$GITHUB_ENV"
 
      - name: Generate markdown for changelog
        shell: python
        env:
          TOKEN: ${{ secrets.TEST }}
        run: |
          import git
          import re
          import http.client
          import json
          import os
          
          conn = http.client.HTTPSConnection("api.github.com")
          token = os.environ['TOKEN']
          payload = ""
          token = "Bearer " + token
          
          headers = {
              'content-type': "application/json; charset=utf-8",
              'Authorization': token,
              'User-Agent': 'Your-User-Agent-Name'
          }
          
          repo = git.Repo(search_parent_directories=True)
          
          # Get the latest tag
          latest_tag = repo.tags[-1]
          
          # Get the previous tag prior to latest tag
          previous_tag = os.environ['PREVIOUS_TAG']
          
          # Define Regex pattern for filtering commit messages
          patterns = [r'(?:^\[)(\b[A-Z][A-Z0-9_]+-[1-9][0-9]*)(?:\])']
          
          # Compile regex patterns
          regex_patterns = [re.compile(pattern) for pattern in patterns]
          
          # Iterate commits between previous tag and latest tag
          commits_since_latest_tag = list(repo.iter_commits(f"{previous_tag}..{latest_tag}", no_merges=True))
          
          markdown = []
          for commit in commits_since_latest_tag:
              message = commit.message.strip()
              for pattern in regex_patterns:
                  if pattern.match(commit.message.strip()):
                      sha = str(commit.hexsha)
                      conn.request("GET", f"/repos/kashyaprakshith/change-log/commits/{sha}/pulls", payload, headers)
                      response = conn.getresponse()
                      data = response.read().decode("utf-8")
                      info = json.loads(data)
                      data = response.read().decode("utf-8")  
                      # extract the PR link from the response
                      html_href = info[0].get('_links', {}).get('html', {}).get('href', '') 
          
                      # extract the author name
                      author_name = commit.author.name 
          
                      # extract the PR link
                      link = f"{html_href}"
                      # Regex pattern match to extract PR Number
                      pattern = r'/pull/(\d+)'
                      match = re.search(pattern, link)
                      if match:
                          number = match.group(1)
          
                      
                      data = f"- {message} by {author_name} [#{number}]({html_href})"
                      markdown.append(data)
          markdown_str = "\n".join(markdown)
          print(markdown_str)
          
          # modify the markdown_str as a multiline string
          modified = f'''RELEASE_NOTES<<EOF
          {markdown_str}
          EOF
          '''
          # Upload to GITHUB_ENV
          env_file = os.getenv('GITHUB_ENV')
          with open(env_file, "a") as myfile:
              myfile.write(modified)
          
      - name: Update Changelog
        uses: stefanzweifel/changelog-updater-action@v1
        with:
          latest-version: ${{ env.LATEST_TAG }}
          release-notes: |
            ${{ env.RELEASE_NOTES }}
  

      - name: Push new changelog
        run: |
          git add --update
          git switch ${{ github.event.repository.default_branch }}
          git config --global user.name "raks"
          git config --global user.email "ghxjh@gmail.com"
          git commit -m "Changelog of ${{ github.ref_name }}"
          git log --graph --all --oneline
          git push origin 

     
